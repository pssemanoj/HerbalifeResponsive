<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PageResource1.Title" xml:space="preserve">
    <value>Confirmação</value>
    <comment>_G43</comment>
  </data>
  <data name="ContinueShoppingResource1.Text" xml:space="preserve">
    <value>Continuar Compra</value>
    <comment>_G44</comment>
  </data>
  <data name="PageHeaderEvents" xml:space="preserve">
    <value>Pedido de Convite - Confirmação</value>
    <comment>_G45</comment>
  </data>
  <data name="lblOrderStatusResource1.Text" xml:space="preserve">
    <value>Pedido N.</value>
    <comment>_G46</comment>
  </data>
  <data name="PageHeaderProducts" xml:space="preserve">
    <value>Pedido de Produtos - Confirmação de Pedido</value>
    <comment>_G47</comment>
  </data>
  <data name="OrderSummaryStaticText" xml:space="preserve">
    <value>Resumo do Pedido</value>
    <comment>_G48</comment>
  </data>
  <data name="PrintThisButtonResource1.Text" xml:space="preserve">
    <value>Imprimir esta página</value>
    <comment>_G49</comment>
  </data>
  <data name="EventTicketsReturn" xml:space="preserve">
    <value>Voltar para o Catálogo de Eventos</value>
    <comment>_G50</comment>
  </data>
  <data name="ProductCatalogReturn" xml:space="preserve">
    <value>Voltar para o Catálogo de Produtos</value>
    <comment>_G51</comment>
  </data>
  <data name="lblOrderPlacedSuccessResource.Text" xml:space="preserve">
    <value>Pedido Concluído com Sucesso.</value>
    <comment>_G52</comment>
  </data>
  <data name="lblFControlMessageResource1.Text" xml:space="preserve">
    <value>Parabéns e muito obrigado, seu pedido foi recebido na Herbalife. O pedido será liberado em até 48 horas. Por favor, anote o número desse pedido ou tire uma foto com seu telefone, caso você precise contatar a Herbalife para obter informações do seu pedido. Mais uma vez, obrigado!</value>
    <comment>_G2523</comment>
  </data>
  <data name="lblPendingOrderResource.Text" xml:space="preserve">
    <value>O seu pedido está aguardando confirmação de pagamento, por favor, acompanhe clicando &lt;a href='PendingOrders.aspx'&gt; aqui&lt;/a&gt;.</value>
    <comment>_G2653</comment>
  </data>
  <data name="PendingOrder.Text" xml:space="preserve">
    <value>Pedidos Pendentes</value>
    <comment>_G2654</comment>
  </data>
  <data name="ViewPendingOrderResource.Text" xml:space="preserve">
    <value>Ver os Pedidos Pendentes</value>
    <comment>_G2655</comment>
  </data>
  <data name="lblPBPMessageTitle" xml:space="preserve">
    <value />
    <comment>_G3440</comment>
  </data>
  <data name="PBPOrderSubmittedResource" xml:space="preserve">
    <value />
    <comment>_G3441</comment>
  </data>
  <data name="ReturnToCustomerOrders" xml:space="preserve">
    <value>Voltar para os Pedidos dos Meu Clientes </value>
    <comment>_G3971</comment>
  </data>
  <data name="CreateReceipt.Text" xml:space="preserve">
    <value>Criar recibo</value>
  </data>
  <data name="ForeignPPV.Text" xml:space="preserve">
    <value>Para que as encomendas fora dos EUA e PR sejam consideradas Volume Documentado, os recibos de vendas aretalho têm de ser submetidos, e ACEITES, até ao último dia do respetivo mês.</value>
  </data>
  <data name="Later.Text" xml:space="preserve">
    <value>Faça mais tarde.</value>
  </data>
  <data name="lblReceiptLater.Text" xml:space="preserve">
    <value>Continue para criar o Recibo do Cliente para este pedido agora. Caso prefira, você poderá fazê-lo mais tarde, para isso Acesse o menu Clientes e depois o menu Recibos. Na página Recibos, clique no botão "Criar novo recibo".</value>
  </data>
</root>