<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="RetailPriceColumnName.HeaderText" xml:space="preserve">
    <value>Retail Price</value>
    <comment>_G2734</comment>
  </data>
  <data name="SalesTaxMessage.InnerText" xml:space="preserve">
    <value>Enter the state Tax if you know it, or use the find Tax tool to get exact tax for any address in the U.S.&lt;/br&gt;You can also manually adjust the values at any time.&lt;/br&gt;This will be added to "Customer Price" column.</value>
    <comment>_G2735</comment>
  </data>
  <data name="ProductNameColumnName.HeaderText" xml:space="preserve">
    <value>Product Name</value>
    <comment>_G2733</comment>
  </data>
  <data name="DistributorLoadedCostText.Text" xml:space="preserve">
    <value>Member Price is the fully loaded amount that a Member pays for product. It includes Tax and Shipping &amp;Handling. &lt;br /&gt;&lt;br /&gt;Member Price = Discounted Retail + Tax + S&amp;H</value>
    <comment>_G2725</comment>
  </data>
  <data name="DistributorLoadedCostColumnName.HeaderText" xml:space="preserve">
    <value>Member Price</value>
    <comment>_G2724</comment>
  </data>
  <data name="DistributorCostTitle.InnerText" xml:space="preserve">
    <value>Discount Percentage</value>
    <comment>_G2723</comment>
  </data>
  <data name="EarnBaseColumnName.HeaderText" xml:space="preserve">
    <value>Earn Base</value>
    <comment>_G2726</comment>
  </data>
  <data name="VolumePointsColumnName.HeaderText" xml:space="preserve">
    <value>Volume Points</value>
    <comment>_G2741</comment>
  </data>
  <data name="TopMessage.InnerText" xml:space="preserve">
    <value>This tool calculates the total price to charge customers, including tax, shipping and handling and discounts.</value>
    <comment>_G2740</comment>
  </data>
  <data name="CalculateButton.Text" xml:space="preserve">
    <value>Calculate</value>
    <comment>_G2743</comment>
  </data>
  <data name="EstimateButton.Text" xml:space="preserve">
    <value>Estimate S&amp;H</value>
    <comment>_G2742</comment>
  </data>
  <data name="ShippingAndHandlingMessage.InnerText" xml:space="preserve">
    <value>Enter a percentage to be added to each product. You can modify this to cover your shipping expenses.&lt;/br&gt;This value is added to the "Customer Price" column.</value>
    <comment>_G2737</comment>
  </data>
  <data name="SalesTaxTitle.InnerText" xml:space="preserve">
    <value>Sales Tax</value>
    <comment>_G2736</comment>
  </data>
  <data name="SkuColumnName.HeaderText" xml:space="preserve">
    <value>SKU</value>
    <comment>_G2739</comment>
  </data>
  <data name="ShippingAndHandlingTitle.InnerText" xml:space="preserve">
    <value>Shipping &amp; Handling</value>
    <comment>_G2738</comment>
  </data>
  <data name="ExportButton.Text" xml:space="preserve">
    <value>Download PDF</value>
    <comment>_G2727</comment>
  </data>
  <data name="FindTaxButton.Text" xml:space="preserve">
    <value>Calculate local sales tax</value>
    <comment>_G2728</comment>
  </data>
  <data name="CustomerDiscountTitle.InnerText" xml:space="preserve">
    <value>Customer Discount</value>
    <comment>_G2714</comment>
  </data>
  <data name="BottomMessage.InnerText" xml:space="preserve">
    <value>Create a PDF for easier printing and sharing.</value>
    <comment>_G2713</comment>
  </data>
  <data name="NoRecordsMessage.Text" xml:space="preserve">
    <value>Catalog not available.</value>
    <comment>_G2731</comment>
  </data>
  <data name="InvalidInputText" xml:space="preserve">
    <value>Invalid input, it has been set to default.</value>
    <comment>_G2730</comment>
  </data>
  <data name="InvalidAddresstText" xml:space="preserve">
    <value>Invalid address, sales tax has been set to default.</value>
    <comment>_G2729</comment>
  </data>
  <data name="OnlyCustomerPrice.Text" xml:space="preserve">
    <value>Show ONLY Customer Price Column</value>
    <comment>_G2732</comment>
  </data>
  <data name="DefaultZipCodeText" xml:space="preserve">
    <value>Zip Code</value>
    <comment>_G2720</comment>
  </data>
  <data name="DefaultStateOption" xml:space="preserve">
    <value>State</value>
    <comment>_G2719</comment>
  </data>
  <data name="DistributorCostColumnName.HeaderText" xml:space="preserve">
    <value>Discounted Retail</value>
    <comment>_G2722</comment>
  </data>
  <data name="DiscountCostHelpText.Text" xml:space="preserve">
    <value>Discounted Retail is the price that a Member pays just for the product. It is calculated by first multiplying the Member Discount by the Earn Base, then subtracting that from the Retail Price.&lt;br /&gt;&lt;br /&gt;Discounted Retail = Retail Price - (Earn Base x Member Discount)</value>
    <comment>_G2721</comment>
  </data>
  <data name="CustomerPriceHelpText.Text" xml:space="preserve">
    <value>Customer Price is the amount to charge a customer to cover Tax and Shipping &amp; Handling, and maintain your profit level. You may reduce this price by adding a Customer Discount.&lt;br /&gt;&lt;br /&gt;Customer Price = Retail Price with Discount + Tax + S&amp;H</value>
    <comment>_G2716</comment>
  </data>
  <data name="CustomerPriceColumnName.HeaderText" xml:space="preserve">
    <value>Customer Price</value>
    <comment>_G2715</comment>
  </data>
  <data name="DefaultFileName" xml:space="preserve">
    <value>Price list</value>
    <comment>_G2718</comment>
  </data>
  <data name="DefaultCityText" xml:space="preserve">
    <value>City</value>
    <comment>_G2717</comment>
  </data>
  <data name="lblErrorMsgTaxlookup1.Text" xml:space="preserve">
    <value>All fields required</value>
    <comment>_G2786</comment>
  </data>
  <data name="lblErrorMsgTaxlookup2.Text" xml:space="preserve">
    <value>ERROR: Please complete all fields</value>
    <comment>_G2787</comment>
  </data>
  <data name="PriceListErrorText" xml:space="preserve">
    <value>Error. Please Review values and try again</value>
    <comment>_G2788</comment>
  </data>
  <data name="DefaultStreetAddressText" xml:space="preserve">
    <value>Street Address</value>
    <comment>_G2785</comment>
  </data>
  <data name="PriceListUpdatedText" xml:space="preserve">
    <value>Price List Updated</value>
    <comment>_G2782</comment>
  </data>
</root>