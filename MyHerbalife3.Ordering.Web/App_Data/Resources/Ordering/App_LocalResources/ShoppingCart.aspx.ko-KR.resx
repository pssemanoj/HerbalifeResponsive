<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PageHeaderEvents" xml:space="preserve">
    <value>행사주문- 결제</value>
    <comment>_G222</comment>
  </data>
  <data name="PageHeaderProducts" xml:space="preserve">
    <value>제품 주문 결제하기</value>
    <comment>_G223</comment>
  </data>
  <data name="PageResource1.Title" xml:space="preserve">
    <value>장바구니</value>
    <comment>_G224</comment>
  </data>
  <data name="lblStep3Resource1.Text" xml:space="preserve">
    <value>1-4단계중 주소와 이메일 확인</value>
    <comment>_G225</comment>
  </data>
  <data name="Label1Resource1.Text" xml:space="preserve">
    <value>2-4 단계 장바구니 확인</value>
    <comment>_G226</comment>
  </data>
  <data name="lblSavedCartName" xml:space="preserve">
    <value>장바구니 저장 - {0}</value>
    <comment>_G2416</comment>
  </data>
  <data name="lblTermConditionHeading.Text" xml:space="preserve">
    <value>이용 약관</value>
    <comment>_G3436</comment>
  </data>
  <data name="TermConditionOk.Text" xml:space="preserve">
    <value>확인</value>
    <comment>_G3437</comment>
  </data>
  <data name="TermConditionNo.Text" xml:space="preserve">
    <value>취소</value>
    <comment>_G3438</comment>
  </data>
  <data name="ClearCartCancel.Text" xml:space="preserve">
    <value>취소</value>
    <comment>_G2656</comment>
  </data>
  <data name="lblSaveCartName.Text" xml:space="preserve">
    <value>새로운 장바구니 이름</value>
    <comment>_G2665</comment>
  </data>
  <data name="lblExistentCart.Text" xml:space="preserve">
    <value>입력하신 이름이 존재합니다. 다른 이름을 사용하여 주시기 바랍니다.</value>
    <comment>_G2664</comment>
  </data>
  <data name="lblEmptyCartName.Text" xml:space="preserve">
    <value>유효한 카트 이름을 입력 하십시오.</value>
    <comment>_G2663</comment>
  </data>
  <data name="lblClearCartMessage1.Text" xml:space="preserve">
    <value>현재 장바구니에 제품이 담겨 있습니다. 다음번 쇼핑을 위해장바구니를 저장하시고 싶으시면,장바구니의 이름을 입력하십시오.</value>
    <comment>_G2659</comment>
  </data>
  <data name="ClearCartSave.Text" xml:space="preserve">
    <value>저장하고 계속쇼핑</value>
    <comment>_G2658</comment>
  </data>
  <data name="ClearCartDo.Text" xml:space="preserve">
    <value>저장하지 않고 계속쇼핑</value>
    <comment>_G2657</comment>
  </data>
  <data name="lblClearCartTitle.Text" xml:space="preserve">
    <value>확인</value>
    <comment>_G2662</comment>
  </data>
  <data name="lblClearCartMessage3.Text" xml:space="preserve">
    <value>장바구니를 저장하지 않으시면 장바구니는 초기화 됩니다.</value>
    <comment>_G2661</comment>
  </data>
  <data name="lblClearCartMessage2.Text" xml:space="preserve">
    <value>추천 이름을 사용하시거나 기억하기 쉬운 고유의 이름을 사용하시기 바랍니다.</value>
    <comment>_G2660</comment>
  </data>
  <data name="CustomerOrderStaticMessage" xml:space="preserve">
    <value>이 주문에 적용된 변경사항이 자동으로 저장됩니다. </value>
  </data>
</root>