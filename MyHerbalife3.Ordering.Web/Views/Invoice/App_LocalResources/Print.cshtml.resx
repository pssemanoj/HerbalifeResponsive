<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="thankyou" xml:space="preserve">
    <value>Thank You For Your Order!</value>
  </data>
  <data name="invoiceId" xml:space="preserve">
    <value>Invoice #</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="emailAddress" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="invoice" xml:space="preserve">
    <value>INVOICE</value>
  </data>
  <data name="notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="productName" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="qty" xml:space="preserve">
    <value>Qty</value>
  </data>
  <data name="retailPrice" xml:space="preserve">
    <value>Suggested Retail Price</value>
  </data>
  <data name="shipping" xml:space="preserve">
    <value>Shipping</value>
  </data>
  <data name="shipTo" xml:space="preserve">
    <value>Ship To</value>
  </data>
  <data name="sku" xml:space="preserve">
    <value>SKU</value>
  </data>
  <data name="subtotal" xml:space="preserve">
    <value>Subtotal</value>
  </data>
  <data name="tax" xml:space="preserve">
    <value>Tax</value>
  </data>
  <data name="totalPrice" xml:space="preserve">
    <value>Total Price</value>
  </data>
  <data name="yourTotalDue" xml:space="preserve">
    <value>Your Total Due</value>
  </data>
  <data name="invoiceDate" xml:space="preserve">
    <value>Invoice Date</value>
  </data>
  <data name="phone" xml:space="preserve">
    <value>Phone #</value>
  </data>
  <data name="pleaseSendPayment" xml:space="preserve">
    <value>Please Send Payment To</value>
  </data>
  <data name="shippingAndHandling" xml:space="preserve">
    <value>Shipping &amp; Handling</value>
  </data>
  <data name="yourPrice" xml:space="preserve">
    <value>Your Price</value>
  </data>
  <data name="earnBase" xml:space="preserve">
    <value>Earn Base</value>
  </data>
  <data name="3daysAfterText" xml:space="preserve">
    <value>(Date: 3 days after date of order)</value>
  </data>
  <data name="address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="buyerSignature" xml:space="preserve">
    <value>Buyer's Signature</value>
  </data>
  <data name="buyerText" xml:space="preserve">
    <value>You, the buyer, may cancel this transaction at any time prior to midnight of the third business day after the date of this transaction.&lt;/p&gt;&lt;p&gt;See the &amp;quot;Notice of Cancellation&amp;quot; on the reverse of this form for an explanation of this right. After the 3-day cancellation period provided above, you are still protected by the HERBALIFE REFUND POLICY as set forth.</value>
  </data>
  <data name="cancelPolicy1" xml:space="preserve">
    <value>If you cancel, any property traded in, any payments made by you under the contract or sale, and any negotiable instrument executed by&lt;br/&gt;
             you will be returned within TEN BUSINESS DAYS following the receipt of the seller of your cancellation notice, and any security interest&lt;br/&gt;
             arising out of the transaction will be canceled.</value>
  </data>
  <data name="cancelPolicy2" xml:space="preserve">
    <value>If you cancel, you must make available to the seller at your residence, in substantially as good condition as when received, any goods&lt;br/&gt;
             delivered to you under this contract or sale; or you may, if you wish, comply with the instructions of the seller regarding the return&lt;br/&gt;
             shipment of the goods at the seller's expense and risk.</value>
  </data>
  <data name="cancelPolicy3" xml:space="preserve">
    <value>If you do make the goods available to the seller and the seller does not pick them up within 20 days of the date of your Notice of&lt;br/&gt;
             Cancellation, you may retain or dispose of the goods without any further obligation. If you fail to make the goods available to the seller,&lt;br/&gt;
             or if you agree to return the goods to the seller and fail to do so, then you remain liable for performance of all obligations under the&lt;br/&gt;
             contract.</value>
  </data>
  <data name="cancelText" xml:space="preserve">
    <value>You may CANCEL this transaction, without any penalty or obligation, within THREE BUSINESS DAYS from the above date.</value>
  </data>
  <data name="cancelTransactionText" xml:space="preserve">
    <value>To cancel this transaction, mail or deliver a signed copy of this Cancellation Notice or any other written notice, or send a telegram to:</value>
  </data>
  <data name="city" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="dateMonthYear" xml:space="preserve">
    <value>Day/Month/Year</value>
  </data>
  <data name="dateTransaction" xml:space="preserve">
    <value>Date of Transaction</value>
  </data>
  <data name="exchangePolicy1" xml:space="preserve">
    <value>Herbalife offers an exchange or a full refund. Simply request a refund from your Distributor within thirty (30) days from your receipt of&lt;br/&gt;
             the product, and return the unused portion with the product containers to the Distributor named on the reverse side.</value>
  </data>
  <data name="exchangePolicy2" xml:space="preserve">
    <value>FEDERAL AND STATE LAW: Regulations require that we print the following Notice of Cancellation. The Herbalife Refund Policy offers&lt;br/&gt;
             and provides you greater protection than the law requires.</value>
  </data>
  <data name="herbalifeDs" xml:space="preserve">
    <value>Herbalife Distributor</value>
  </data>
  <data name="herbalifeRefund" xml:space="preserve">
    <value>Herbalife Refund Policy</value>
  </data>
  <data name="icancelText" xml:space="preserve">
    <value>I HEREBY CANCEL THIS TRANSACTION</value>
  </data>
  <data name="importantNotice" xml:space="preserve">
    <value>Important Notice</value>
  </data>
  <data name="iunderStandText" xml:space="preserve">
    <value>I understand that this order may be considered as an invitation to call upon me from time to time, with the understanding that I will be under no obligation to buy.</value>
  </data>
  <data name="noticeCancellation" xml:space="preserve">
    <value>Notice of Cancellation</value>
  </data>
  <data name="notLaterThan" xml:space="preserve">
    <value>NOT LATER THAN MIDNIGHT OF</value>
  </data>
  <data name="state" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="zipCode" xml:space="preserve">
    <value>Zip Code</value>
  </data>
  <data name="discount" xml:space="preserve">
    <value>Discount</value>
  </data>
  <data name="vat" xml:space="preserve">
    <value>VAT Registration</value>
  </data>
  <data name="VatEmptyValue" xml:space="preserve">
    <value />
  </data>
  <data name="status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="freeShippingAndHandling" xml:space="preserve">
    <value>FREE Shipping &amp; Handling</value>
  </data>
</root>